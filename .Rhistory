remove.packages(sensitivitypuc)
remove.packages("sensitivitypuc")
library(devtools);
install("C:/Users/matte/Dropbox/Causal questions shared with Matteo/projects/Sensitivity Analysis/draft/JASA submission/revision 2/submitted material/supplementary materials/code/sensitivitypuc");
library(sensitivitypuc);
remove.packages("sensitivitypuc")
devtools::install_github("matteobonvini/sensitivitypuc")
remove.packages("sensitivitypuc")
library(devtools);
devtools::install_github("matteobonvini/sensitivitypuc")
library(sensitivitypuc)
remove.packages("sensitivitypuc")
install("C:/Users/matte/Dropbox/Causal questions shared with Matteo/projects/Sensitivity Analysis/draft/JASA submission/revision 2/submitted material/supplementary materials/code/sensitivitypuc");
library(devtools);
install("C:/Users/matte/Dropbox/Causal questions shared with Matteo/projects/Sensitivity Analysis/draft/JASA submission/revision 2/submitted material/supplementary materials/code/sensitivitypuc");
library(sensitivitypuc);
############################################################
## Analyze data of Connors et al (1996) as in Section 4.2 ##
############################################################
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(varhandle)
library(sensitivitypuc)
options(stringsAsFactors = TRUE)
set.seed(1000)
data_url <- "http://biostat.mc.vanderbilt.edu/wiki/pub/Main/DataSets/rhc.csv"
dat <- read.csv(data_url, header = TRUE)
covariates <- c("age", "sex", "race", "edu", "income",
"ninsclas", "cat1", "cat2",
"resp", "card", "neuro", "gastr", "renal", "meta",
"hema", "seps", "trauma", "ortho",
"adld3p", "das2d3pc", "dnr1", "ca",  "aps1", "scoma1",
"wtkilo1", "temp1", "meanbp1", "resp1", "hrt1", "pafi1",
"paco21", "ph1", "wblc1", "hema1", "sod1", "pot1", "crea1",
"bili1", "alb1", "urin1", "surv2md1",
"cardiohx", "chfhx", "dementhx",
"psychhx", "chrpulhx", "renalhx", "liverhx", "gibledhx",
"malighx", "immunhx", "transhx", "amihx")
x <- dat[, covariates]
miss_covs <- covariates[apply(x, 2, function(x) sum(is.na(x)) > 0)]
missdat <- as.data.frame(matrix(0, ncol = length(miss_covs), nrow = nrow(x),
dimnames = list(NULL, paste0("is_miss_", miss_covs))))
for(varname in miss_covs) {
idx <- which(is.na(x[, varname]))
if(class(x[, varname]) == "factor") {
levels(x[, varname]) <- c(levels(x[, varname]), "missing")
x[idx, varname] <- "missing"
missdat[, paste0("is_miss_", varname)] <- NULL
} else {
x[idx, varname] <- 0
missdat[idx, paste0("is_miss_", varname)] <- 1
}
}
x <- cbind(x, missdat)
# Fix factors or otherwise SuperLearner complains
newdf <- x
for(i in 1:ncol(x)) {
if(class(x[, i]) == "factor") {
tmp <- to.dummy(x[, i], colnames(x)[i])
newdf <- newdf[, !colnames(newdf) %in% colnames(x)[i]]
newdf <- cbind(newdf, tmp[, -1, drop = FALSE])
}
}
x <- newdf
rm(newdf)
rm(tmp)
# Avoid SuperLearner conflicts due to variable names
colnames(x) <- paste("x", 1:ncol(x), sep = "")
# A = 1 means patient underwent RHC
a <- ifelse(dat$swang1 == "No RHC", 0, 1)
# Y = 1 means survival at day 30
y <- ifelse(dat$dth30 == "No", 1, 0)
# unadjusted OR (using survival as outcome)
mean(y[a == 0]) / (1 - mean(y[a == 0])) * (1 - mean(y[a == 1])) / mean(y[a == 1])
# unadjusted RD
mean(y[a == 0]) - mean(y[a == 1])
# Select values for prop of unmeasured confounding at which evaluate bounds
eps_seq <- seq(0, 0.5, 0.0001)
delta_seq <- c(0.25, 0.50, 0.75, 1)
# Select model, "x" = S \ind (Y, A) | X, "xa" = S \ind Y | (X, A)
model <- c("x", "xa")
# Select confidence level and # rademachers for multiplier bootstrap
alpha <- 0.05
B <- 10000
# Select SuperLearner Library
sl.lib <- c("SL.mean", "SL.speedlm", "SL.speedglm", "SL.gam", "SL.svm",
"SL.polymars", "SL.ranger")
nsplits <- 5
# Estimate Regression functions once for both model "x" and model "xa"
# There is a "non-list contrasts argument ignored" warning from SL gam library
# coming from model.matrix, which I think can be ignored.
system.time({
nuis_fns <- do_crossfit(y = y, a = a, x = x, ymin = 0, ymax = 1,
nsplits = nsplits, outfam = binomial(),
treatfam = binomial(), sl.lib = sl.lib,
do_parallel = TRUE, ncluster = 3)
})
